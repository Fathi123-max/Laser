import 'package:hive/hive.dart';

part 'user.g.dart'; // This file will be generated by running the Hive generator

@HiveType(typeId: 3) // Ensure this typeId is unique.
class User extends HiveObject {
  @HiveField(0)
  late final String username;

  @HiveField(1)
  late final String mobileNumber;

  // Hive doesn't support DateTime directly. You'll need to convert these to and from timestamps or strings.
  @HiveField(2)
  late final DateTime updatedAt;

  @HiveField(3)
  late final DateTime createdAt;

  @HiveField(4)
  late final int id;

  User({
    required this.username,
    required this.mobileNumber,
    required this.updatedAt,
    required this.createdAt,
    required this.id,
  });

  factory User.fromJson(Map<String, dynamic> json) {
    return User(
      username: json['username'],
      mobileNumber: json['mobileNumber'],
      // Convert from timestamp or string to DateTime
      updatedAt: DateTime.parse(json['updatedAt']),
      createdAt: DateTime.parse(json['createdAt']),
      id: json['id'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'username': username,
      'mobileNumber': mobileNumber,
      // Convert from DateTime to timestamp or string
      'updatedAt': updatedAt,
      'createdAt': createdAt,
      'id': id,
    };
  }

  User.fromData(
      {required this.username,
      required this.mobileNumber,
      required this.updatedAt,
      required this.createdAt,
      required this.id});

  // Consider using the "source factory", as described at:
  // https://docs.hivedb.dev/#/custom-objects/serialization

  // copyWith remains unchanged.
}
